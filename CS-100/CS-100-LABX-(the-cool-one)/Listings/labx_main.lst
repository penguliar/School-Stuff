


ARM Macro Assembler    Page 1 


    1 00000000         ; CS100_LabX_Main
    2 00000000         ; Due Date: 12/4/2024
    3 00000000         ; Student Name: Aeden Brookshire
    4 00000000         ; Section: 
    5 00000000         
    6 00000000         ; Author: 
    7 00000000         ; © 2020 DigiPen, All Rights Reserved.
    8 00000000         
    9 00000000                 GET              LabX_Data.s ; Get/include the d
                                                            ata file
    1 00000000                 AREA             DATA, CODE, READONLY
    2 00000000         
    3 00000000 400FE608 
                       RCGCGPIO
                               EQU              0X400FE608  ;Address of GPIO Mo
                                                            dule, it ACTIVATES 
                                                            PORTS...
    4 00000000         ; ...bit 0 = port A, bit 1 = port B, ... and bit 5 = por
                       t F
    5 00000000         
    6 00000000         ;Speaker must be connected to PB7 (PB7 = PWM Module 0: G
                       enerator 0: GEN B ), also called M0PWM1 (GEN A and GEN B
                        share same freq and timer)
    7 00000000         
    8 00000000 400053FC 
                       GPIOBDATA_RW
                               EQU              0X400053FC  ; Address of Port B
                                                             (DATA)of our micro
                                                            controller (LEDs)
    9 00000000 40005400 
                       GPIOBDIR
                               EQU              0x40005400  ; Address of Port B
                                                             (DIRECTION SETTING
                                                            )of our microcontro
                                                            ller
   10 00000000 4000551C 
                       GPIOBDEN
                               EQU              0X4000551C  ; Address of Port B
                                                             (DIGITAL SETTING) 
                                                            of our microcontrol
                                                            ler
   11 00000000         
   12 00000000         ;PWM Settings for Port B 
   13 00000000 40005420 
                       GPIOBAFSEL
                               EQU              0X40005420  ; Address of Port B
                                                             (Alternate functio
                                                            n SETTING) of our m
                                                            icrocontroller
   14 00000000 4000552C 
                       GPIOBPCTL
                               EQU              0X4000552C  ; Address to config
                                                            ure which alternate
                                                             function to use 
   15 00000000         
   16 00000000         ;PWM General Settings
   17 00000000 400FE640 
                       RCGCPWM EQU              0X400FE640  ; ENABLE PWM MODULE
                                                             PROVIDE A CLOCK  B



ARM Macro Assembler    Page 2 


                                                            IT O MODULE 0 BIT 1
                                                             MODULE 1
   18 00000000 400FE060 
                       SYSCTL_RCC
                               EQU              0X400FE060  ; Microcontroller C
                                                            lock Control Config
                                                            uration 
   19 00000000 40028040 
                       PWM0CTL EQU              0X40028040  ;Disable/Enable PWM
                                                             Generator
   20 00000000 40028008 
                       PWMENABLE
                               EQU              0X40028008  ;Disable/Enable PWM
                                                             Outputs
   21 00000000 4002805C 
                       PWM0CMPB
                               EQU              0X4002805C  ;Value at which Out
                                                            put will change (Du
                                                            ty Cycle) 
   22 00000000 40028064 
                       PWM0GENB
                               EQU              0X40028064  ;Control bits for P
                                                            WM0, Configuration 
                                                            
   23 00000000 40028050 
                       PWM0LOAD
                               EQU              0X40028050  ;Period, cycles nee
                                                            ded to count
   24 00000000         
   25 00000000         ;constants 
   26 00000000 00D00000 
                       COUNT1  EQU              0x00D00000
   27 00000000 00001754 
                       MIDDLE_C_DIV
                               EQU              0x1754      ; 261.626HZ
   28 00000000 000014C9 
                       MIDDLE_D_DIV
                               EQU              0x14C9      ; 293.665HZ
   29 00000000 00001284 
                       MIDDLE_E_DIV
                               EQU              0x1284      ; 329.628HZ
   30 00000000 0000117A 
                       MIDDLE_F_DIV
                               EQU              0x117A      ; 349.228HZ
   31 00000000 00000F92 
                       MIDDLE_G_DIV
                               EQU              0xF92       ; 391.995HZ
   32 00000000 00000DDF 
                       MIDDLE_A_DIV
                               EQU              0xDDF       ; 440.000HZ
   33 00000000 00000C5C 
                       MIDDLE_B_DIV
                               EQU              0xC5C       ; 493.883HZ
   34 00000000         
   35 00000000 00000700 
                       MAX_CMP EQU              0X700
   36 00000000         
   37 00000000         ; macros
   38 00000000                 MACRO



ARM Macro Assembler    Page 3 


   39 00000000                 SETBITS          $addr, $data
   40 00000000                 LDR              R0, =$addr
   41 00000000                 LDR              R1, =$data
   42 00000000                 BL               _setbits
   43 00000000                 MEND
   44 00000000         
   45 00000000                 MACRO
   46 00000000                 CLEARBITS        $addr, $data
   47 00000000                 LDR              R0, =$addr
   48 00000000                 LDR              R1, =$data
   49 00000000                 BL               _clearbits
   50 00000000                 MEND
   51 00000000         
   52 00000000                 MACRO
   53 00000000                 DLAY             $delayloopcount
   54 00000000                 LDR              R0,=$delayloopcount
   55 00000000                 BL               _delay
   56 00000000                 MEND
   57 00000000         
   58 00000000                 MACRO
   59 00000000                 WRITEBITS        $addr, $data
   60 00000000                 LDR              R0, =$addr
   61 00000000                 MOV              R1, #$data
   62 00000000                 STR              R1, [R0]
   63 00000000                 MEND
   64 00000000         
   65 00000000                 END
   10 00000000                 GLOBAL           __main      ; Global main funct
                                                            ion
   11 00000000                 AREA             LabX_Main, CODE, READONLY ; Are
                                                            a of code that is r
                                                            ead only
   12 00000000                 ALIGN            2           ; Align the data bo
                                                            undary to a multipl
                                                            e of 2
   13 00000000                 ENTRY                        ; Entry into the co
                                                            de segment
   14 00000000         
   15 00000000         ;;;;;;;; subroutines ;;;;;;;;;;;
   16 00000000         
   17 00000000         ;---------------------------------  
   18 00000000         ; Subroutine: _setbits
   19 00000000         ; Sets bits in memory
   20 00000000         ; Eg. passing "1001" in R1 will set bits at position 0 a
                       nd 3 in R0
   21 00000000         ; Inputs:  R0 = address of value to modify
   22 00000000         ;         R1 = bitmask
   23 00000000         _setbits
   24 00000000 B500            PUSH             {LR}
   25 00000002 6802            LDR              R2, [R0]    ; loads the content
                                                            s of memory referen
                                                            ced in R0 into R2
   26 00000004 EA42 0201       ORR              R2, R1      ; bit-wise or
   27 00000008 6002            STR              R2, [R0]    ; Stores value of R
                                                            2 into memory refer
                                                            enced in R0
   28 0000000A F85D EB04       POP              {LR}
   29 0000000E 4770            BX               LR
   30 00000010         



ARM Macro Assembler    Page 4 


   31 00000010         ;---------------------------------  
   32 00000010         ; Subroutine: _clearbits 
   33 00000010         ; Clears bits in memory
   34 00000010         ; Eg. passing "1001" in R1 will clear bits at position 0
                        and 3 in R0
   35 00000010         ; Inputs:  R0 = address of value to modify
   36 00000010         ;   R1 = bitmask
   37 00000010         _clearbits
   38 00000010 B500            PUSH             {LR}
   39 00000012 6802            LDR              R2, [R0]    ; loads the content
                                                            s of memory referen
                                                            ced in R0 into R2
   40 00000014 EA6F 0301       MVN              R3, R1      ; (move not) invert
                                                            s R1 and puts it in
                                                             R3
   41 00000018 EA02 0203       AND              R2, R3      ; preforms an and o
                                                            peration on R2 and 
                                                            R3 and stores in R2
                                                            
   42 0000001C 6002            STR              R2, [R0]    ; Stores value of R
                                                            2 into memory refer
                                                            enced in R0
   43 0000001E F85D EB04       POP              {LR}
   44 00000022 4770            BX               LR
   45 00000024         
   46 00000024         ;--------------------------------- 
   47 00000024         ;Subroutine: delay 
   48 00000024         ; waits for #COUNT1 ticks to complete
   49 00000024         delay
   50 00000024 F44F 0A50       MOV              R10, #COUNT1
   51 00000028         L
   52 00000028 F1BA 0A01       SUBS             R10, R10, #1
   53 0000002C F1BA 0F00       CMP              R10, #0
   54 00000030 D1FA            BNE              L
   55 00000032 4770            BX               LR
   56 00000034         
   57 00000034         ;---------------------------------  
   58 00000034         ; Subroutine: output_pins_config 
   59 00000034         ;Sets up output pins 
   60 00000034         ;Inputs:None, Outputs:None
   61 00000034         
   62 00000034         output_pins_config
   63 00000034         
   64 00000034 E92D 4FF0       PUSH             { R4-R11, LR } ; stack preserve
                                                            d registers and lin
                                                            k register
   65 00000038         
   66 00000038         ;STUDENT CODE STARTS HERE
   67 00000038         
   68 00000038         ; step 2a
   69 00000038                 SETBITS          RCGCPWM, 2_1 ; Set peripheral c
                                                            lock and enable MOD
                                                            ULE 0
   40 00000038 4829            LDR              R0, =RCGCPWM
   41 0000003A F04F 0101       LDR              R1, =2_1
   42 0000003E F7FF FFDF       BL               _setbits
   70 00000042         
   71 00000042         ; Turn on port B and wait for response   
   72 00000042         ; step 2b



ARM Macro Assembler    Page 5 


   73 00000042                 SETBITS          RCGCGPIO, 2_10
   40 00000042 4828            LDR              R0, =RCGCGPIO
   41 00000044 F04F 0102       LDR              R1, =2_10
   42 00000048 F7FF FFDA       BL               _setbits
   74 0000004C         waitforbloop                         ; start of loop (wa
                                                            it for port B to B 
                                                            set)
   75 0000004C 4825            LDR              R0, =RCGCGPIO
   76 0000004E 2802            CMP              R0, #2_10
   77 00000050 BF18 F7FF 
              FFE7             BLNE             delay
   78 00000056 D1F9            BNE              waitforbloop ; loop if port B i
                                                            sn't set
   79 00000058         
   80 00000058         ; step 2c-2e
   81 00000058                 SETBITS          GPIOBDEN, 0x40
   40 00000058 4823            LDR              R0, =GPIOBDEN
   41 0000005A F04F 0140       LDR              R1, =0x40
   42 0000005E F7FF FFCF       BL               _setbits
   82 00000062                 SETBITS          GPIOBDIR, 0x40
   40 00000062 4822            LDR              R0, =GPIOBDIR
   41 00000064 F04F 0140       LDR              R1, =0x40
   42 00000068 F7FF FFCA       BL               _setbits
   83 0000006C                 SETBITS          GPIOBAFSEL, 0x40
   40 0000006C 4820            LDR              R0, =GPIOBAFSEL
   41 0000006E F04F 0140       LDR              R1, =0x40
   42 00000072 F7FF FFC5       BL               _setbits
   84 00000076                 SETBITS          GPIOBPCTL, 0x40000000
   40 00000076 481F            LDR              R0, =GPIOBPCTL
   41 00000078 F04F 4180       LDR              R1, =0x40000000
   42 0000007C F7FF FFC0       BL               _setbits
   85 00000080         
   86 00000080         ;STUDENT CODE ENDS HERE 
   87 00000080         
   88 00000080         ; Return back to the calling subroutine.
   89 00000080 E8BD 4FF0       POP              { R4-R11, LR }
   90 00000084 4770            BX               LR
   91 00000086         
   92 00000086         ;---------------------------------  
   93 00000086         ; Subroutine: pwm_setup 
   94 00000086         ;Configures PWM port PB7 with its initial frequency 
   95 00000086         ;Inputs:None, Outputs:Sound on the buzzer
   96 00000086         
   97 00000086         pwm_setup
   98 00000086         
   99 00000086 E92D 4FF0       PUSH             { R4-R11, LR } ; stack preserve
                                                            d registers and lin
                                                            k register
  100 0000008A         
  101 0000008A         ;STUDENT CODE STARTS HERE 
  102 0000008A         
  103 0000008A         ; step 6a
  104 0000008A                 SETBITS          SYSCTL_RCC, 2_11000000000000000
000
   40 0000008A 481B            LDR              R0, =SYSCTL_RCC
   41 0000008C F44F 2140       LDR              R1, =2_11000000000000000000
   42 00000090 F7FF FFB6       BL               _setbits
  105 00000094                 CLEARBITS        SYSCTL_RCC, 2_11000000000000000
0



ARM Macro Assembler    Page 6 


   47 00000094 4818            LDR              R0, =SYSCTL_RCC
   48 00000096 F44F 3140       LDR              R1, =2_110000000000000000
   49 0000009A F7FF FFB9       BL               _clearbits
  106 0000009E         
  107 0000009E         ; step 6b
  108 0000009E                 WRITEBITS        PWM0CTL, 0x00
   60 0000009E 4817            LDR              R0, =PWM0CTL
   61 000000A0 F04F 0100       MOV              R1, #0x00
   62 000000A4 6001            STR              R1, [R0]
  109 000000A6         
  110 000000A6         ; step 6c
  111 000000A6                 WRITEBITS        PWM0GENB, 0x80C
   60 000000A6 4816            LDR              R0, =PWM0GENB
   61 000000A8 F640 010C       MOV              R1, #0x80C
   62 000000AC 6001            STR              R1, [R0]
  112 000000AE         
  113 000000AE         ; step 6d
  114 000000AE                 WRITEBITS        PWM0LOAD, MIDDLE_C_DIV
   60 000000AE 4815            LDR              R0, =PWM0LOAD
   61 000000B0 F241 7154       MOV              R1, #MIDDLE_C_DIV
   62 000000B4 6001            STR              R1, [R0]
  115 000000B6         
  116 000000B6         ; step 6e
  117 000000B6                 WRITEBITS        PWM0CMPB, 0x50
   60 000000B6 4814            LDR              R0, =PWM0CMPB
   61 000000B8 F04F 0150       MOV              R1, #0x50
   62 000000BC 6001            STR              R1, [R0]
  118 000000BE         
  119 000000BE         ; step 6f
  120 000000BE                 SETBITS          PWM0CTL, 2_1
   40 000000BE 480F            LDR              R0, =PWM0CTL
   41 000000C0 F04F 0101       LDR              R1, =2_1
   42 000000C4 F7FF FF9C       BL               _setbits
  121 000000C8         
  122 000000C8         ; step 6g
  123 000000C8                 SETBITS          PWMENABLE, 2_01
   40 000000C8 4810            LDR              R0, =PWMENABLE
   41 000000CA F04F 0101       LDR              R1, =2_01
   42 000000CE F7FF FF97       BL               _setbits
  124 000000D2         
  125 000000D2         ;STUDENT CODE ENDS HERE 
  126 000000D2         
  127 000000D2         ; Return back to the calling subroutine.
  128 000000D2 E8BD 4FF0       POP              { R4-R11, LR }
  129 000000D6 4770            BX               LR
  130 000000D8         
  131 000000D8         
  132 000000D8         __main
  133 000000D8         
  134 000000D8         ;STUDENT CODE STARTS HERE 
  135 000000D8         
  136 000000D8 F7FF FFAC       BL               output_pins_config
  137 000000DC F7FF FFD3       BL               pwm_setup
  138 000000E0         
  139 000000E0         
  140 000000E0         ;STUDENT CODE ENDS HERE 
  141 000000E0         
  142 000000E0                 END
              400FE640 



ARM Macro Assembler    Page 7 


              400FE608 
              4000551C 
              40005400 
              40005420 
              4000552C 
              400FE060 
              40028040 
              40028064 
              40028050 
              4002805C 
              40028008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\labx_main.d -o.\objects\labx_main.o -I.\RTE\_Target_1
 -I"C:\Program Files (x86)\Keil_v5\ARM\PACK\ARM\CMSIS\5.9.0\CMSIS\Core\Include"
 -I"C:\Program Files (x86)\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\
TM4C123" --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" -
-predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\l
abx_main.lst LabX_Main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 1 in file LabX_Data.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

L 00000028

Symbol: L
   Definitions
      At line 51 in file LabX_Main.s
   Uses
      At line 54 in file LabX_Main.s
Comment: L used once
LabX_Main 00000000

Symbol: LabX_Main
   Definitions
      At line 11 in file LabX_Main.s
   Uses
      None
Comment: LabX_Main unused
__main 000000D8

Symbol: __main
   Definitions
      At line 132 in file LabX_Main.s
   Uses
      At line 10 in file LabX_Main.s
Comment: __main used once
_clearbits 00000010

Symbol: _clearbits
   Definitions
      At line 37 in file LabX_Main.s
   Uses
      At line 49 in macro CLEARBITS
      at line 105 in file LabX_Main.s
Comment: _clearbits used once
_setbits 00000000

Symbol: _setbits
   Definitions
      At line 23 in file LabX_Main.s
   Uses
      At line 42 in macro SETBITS
      at line 69 in file LabX_Main.s
Comment: _setbits used once
delay 00000024

Symbol: delay
   Definitions
      At line 49 in file LabX_Main.s
   Uses
      At line 77 in file LabX_Main.s
Comment: delay used once
output_pins_config 00000034

Symbol: output_pins_config
   Definitions
      At line 62 in file LabX_Main.s
   Uses
      At line 136 in file LabX_Main.s
Comment: output_pins_config used once
pwm_setup 00000086



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: pwm_setup
   Definitions
      At line 97 in file LabX_Main.s
   Uses
      At line 137 in file LabX_Main.s
Comment: pwm_setup used once
waitforbloop 0000004C

Symbol: waitforbloop
   Definitions
      At line 74 in file LabX_Main.s
   Uses
      At line 78 in file LabX_Main.s
Comment: waitforbloop used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COUNT1 00D00000

Symbol: COUNT1
   Definitions
      At line 26 in file LabX_Data.s
   Uses
      At line 50 in file LabX_Main.s
Comment: COUNT1 used once
GPIOBAFSEL 40005420

Symbol: GPIOBAFSEL
   Definitions
      At line 13 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 83 in file LabX_Main.s
Comment: GPIOBAFSEL used once
GPIOBDATA_RW 400053FC

Symbol: GPIOBDATA_RW
   Definitions
      At line 8 in file LabX_Data.s
   Uses
      None
Comment: GPIOBDATA_RW unused
GPIOBDEN 4000551C

Symbol: GPIOBDEN
   Definitions
      At line 10 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 81 in file LabX_Main.s
Comment: GPIOBDEN used once
GPIOBDIR 40005400

Symbol: GPIOBDIR
   Definitions
      At line 9 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 82 in file LabX_Main.s
Comment: GPIOBDIR used once
GPIOBPCTL 4000552C

Symbol: GPIOBPCTL
   Definitions
      At line 14 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 84 in file LabX_Main.s
Comment: GPIOBPCTL used once
MAX_CMP 00000700

Symbol: MAX_CMP
   Definitions
      At line 35 in file LabX_Data.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: MAX_CMP unused
MIDDLE_A_DIV 00000DDF

Symbol: MIDDLE_A_DIV
   Definitions
      At line 32 in file LabX_Data.s
   Uses
      None
Comment: MIDDLE_A_DIV unused
MIDDLE_B_DIV 00000C5C

Symbol: MIDDLE_B_DIV
   Definitions
      At line 33 in file LabX_Data.s
   Uses
      None
Comment: MIDDLE_B_DIV unused
MIDDLE_C_DIV 00001754

Symbol: MIDDLE_C_DIV
   Definitions
      At line 27 in file LabX_Data.s
   Uses
      At line 61 in macro WRITEBITS
      at line 114 in file LabX_Main.s
Comment: MIDDLE_C_DIV used once
MIDDLE_D_DIV 000014C9

Symbol: MIDDLE_D_DIV
   Definitions
      At line 28 in file LabX_Data.s
   Uses
      None
Comment: MIDDLE_D_DIV unused
MIDDLE_E_DIV 00001284

Symbol: MIDDLE_E_DIV
   Definitions
      At line 29 in file LabX_Data.s
   Uses
      None
Comment: MIDDLE_E_DIV unused
MIDDLE_F_DIV 0000117A

Symbol: MIDDLE_F_DIV
   Definitions
      At line 30 in file LabX_Data.s
   Uses
      None
Comment: MIDDLE_F_DIV unused
MIDDLE_G_DIV 00000F92

Symbol: MIDDLE_G_DIV
   Definitions
      At line 31 in file LabX_Data.s
   Uses
      None
Comment: MIDDLE_G_DIV unused
PWM0CMPB 4002805C



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: PWM0CMPB
   Definitions
      At line 21 in file LabX_Data.s
   Uses
      At line 60 in macro WRITEBITS
      at line 117 in file LabX_Main.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL
   Definitions
      At line 19 in file LabX_Data.s
   Uses
      At line 60 in macro WRITEBITS
      at line 108 in file LabX_Main.s
      At line 40 in macro SETBITS
      at line 120 in file LabX_Main.s

PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 22 in file LabX_Data.s
   Uses
      At line 60 in macro WRITEBITS
      at line 111 in file LabX_Main.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 23 in file LabX_Data.s
   Uses
      At line 60 in macro WRITEBITS
      at line 114 in file LabX_Main.s
Comment: PWM0LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 20 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 123 in file LabX_Main.s
Comment: PWMENABLE used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 3 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 73 in file LabX_Main.s
      At line 75 in file LabX_Main.s

RCGCPWM 400FE640

Symbol: RCGCPWM



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 17 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 69 in file LabX_Main.s
Comment: RCGCPWM used once
SYSCTL_RCC 400FE060

Symbol: SYSCTL_RCC
   Definitions
      At line 18 in file LabX_Data.s
   Uses
      At line 40 in macro SETBITS
      at line 104 in file LabX_Main.s
      At line 47 in macro CLEARBITS
      at line 105 in file LabX_Main.s

22 symbols
369 symbols in table
